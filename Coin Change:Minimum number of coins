#include<bits/stdc++.h>
using namespace std;
int t[501][501];

int unboundedknapsack(int count[],int n,int sum){
    for(int i=1;i<n+1;i++){
        t[i][0]=0;
    }

    for(int i=0;i<sum+1;i++){
        t[0][i]=INT_MAX-1;  
    }

    //twist
    for(int i=1;i<sum+1;i++){
        if(i%count[0]==0){
            t[1][i]=i/count[0];
        }
        else{
            t[1][i]=INT_MAX-1;
        }
    }

    for(int i=2;i<n+1;i++){
        for(int j=1;j<sum+1;j++){
            if(count[i-1]<=j){
                t[i][j] = min(t[i-1][j] ,1+t[i][j-count[i-1]]);
            }
            else{
                t[i][j]= t[i-1][j];
            }
        }
    }

    return t[n][sum];
}

int main(){
    int count[3]={1, 2, 3};
    int n=3;

    int sum=5;


    cout<<unboundedknapsack(count,n,sum);

    return 0;
}
