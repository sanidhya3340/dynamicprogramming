#include<bits/stdc++.h>
using namespace std;
int t[501][501];

int unboundedknapsack(int price[],int piece[],int n,int len){
    if(n==0 || len ==0)
        return 0;

    for(int i=0;i<n+1;i++)
        t[i][0]=0;

    for(int i=0;i<len+1;i++)
        t[0][i]=0;

    for(int i=1;i<n+1;i++){
        for(int j=1;j<len+1;j++){
            if(piece[i-1]<=j){
                t[i][j] = max(price[i-1]+t[i][j-piece[i-1]],t[i-1][j]);
            }
            else{
                t[i][j]=t[i-1][j];
            }
        }
    }
    return t[n][len];
}

int main(){
    int price[4]={5,6,8,8};
    int n=4;

    int len=8;

    int piece[n];

    for(int i=0;i<n;i++)
        piece[i]=i+1;


    cout<<unboundedknapsack(price,piece,n,len);

    return 0;
}
